*more-toggling.txt* More unimpaired-like toggling

INTRODUCTION                                    *more-toggling*

This plugin provides more toggling mappings that are similar to those in
|unimpaired|.

OPTION TOGGLING                                 *more-toggling-toggling*

On	Off	Toggle	Option
*[ok*	*]ok*	*cok*	'showbreak'
*[om*	*]om*	*com*	multi-byte support (|formatoptions|+=mB and
			|spelllang|+=cjk)
*[ot*	*]ot*	*cot*	'textwidth'
*[oy*	*]oy*	*coy*	'syntax'
*[oY*	*]oY*	*coY*	:syntax enable or :syntax off (see |:syntax-enable|)

                                                *b:tw_saved*
TEXTWIDTH TOGGLING                              *more-toggling-textwidth*

The 'textwidth' toggling is a little more complicated than the others, because
rather than storing an "on" or "off" value, it stores an integer. The way this
works is:

  * In addition to 'textwidth', we keep track of a buffer-local variable
    called |b:tw_saved|; this way, if 'textwidth' is turned off (set to 0)
    temporarily, it can be restored later.
  * 'textwidth' and |b:tw_saved| will never take on distinct positive values
    using the provided mappings; if they do through other means, the values
    will be synced the next time one of the provided mappings is used. This
    ensures |b:tw_saved| is a faithful stored value for 'textwidth'.
  * [ot accepts a count to set 'textwidth' (and by extension |b:tw_saved|) to
    the value of the count.
  * ]ot accepts a count to set the value of |b:tw_saved|; in other words, a
    value other than 'textwidth' can be stored.

Some effort was made to make the use of these toggles intuitive.

 vim:tw=78:et:ts=8:ft=help:norl:
